--Código extraído do modelo lógico

-- MySQL Script generated by MySQL Workbench
-- Sat Oct  5 16:47:20 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cargo` (
  `idCargo` INT NOT NULL AUTO_INCREMENT,
  `nomeCargo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCargo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Endereco` (
  `idEndereco` INT NOT NULL AUTO_INCREMENT,
  `endLogradouro` VARCHAR(45) NOT NULL,
  `endNumero` VARCHAR(45) NOT NULL,
  `endComplemento` VARCHAR(45) NULL,
  `endCidade` VARCHAR(45) NOT NULL,
  `endEstado` VARCHAR(45) NOT NULL,
  `endPais` VARCHAR(45) NOT NULL,
  `endCEP` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEndereco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Equipe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Equipe` (
  `idEquipe` INT NOT NULL AUTO_INCREMENT,
  `nomeEquipe` VARCHAR(45) NOT NULL,
  `numerRecursos` INT NOT NULL,
  PRIMARY KEY (`idEquipe`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Recurso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Recurso` (
  `idRecurso` INT NOT NULL AUTO_INCREMENT,
  `nomeRecurso` VARCHAR(45) NOT NULL,
  `salarioRecurso` FLOAT NOT NULL,
  `Cargo_idCargo` INT NOT NULL,
  `Endereco_idEndereco` INT NOT NULL,
  `Equipe_idEquipe1` INT NOT NULL,
  PRIMARY KEY (`idRecurso`),
  INDEX `fk_Recurso_Cargo_idx` (`Cargo_idCargo` ASC) VISIBLE,
  INDEX `fk_Recurso_Endereco1_idx` (`Endereco_idEndereco` ASC) VISIBLE,
  INDEX `fk_Recurso_Equipe1_idx` (`Equipe_idEquipe1` ASC) VISIBLE,
  CONSTRAINT `fk_Recurso_Cargo`
    FOREIGN KEY (`Cargo_idCargo`)
    REFERENCES `mydb`.`Cargo` (`idCargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Recurso_Endereco1`
    FOREIGN KEY (`Endereco_idEndereco`)
    REFERENCES `mydb`.`Endereco` (`idEndereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Recurso_Equipe1`
    FOREIGN KEY (`Equipe_idEquipe1`)
    REFERENCES `mydb`.`Equipe` (`idEquipe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Contato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contato` (
  `idContato` INT NOT NULL AUTO_INCREMENT,
  `tipoContato` VARCHAR(45) NULL,
  `numeroContato` VARCHAR(45) NOT NULL,
  `Recurso_idRecurso` INT NOT NULL,
  `Recurso_Equipe_idEquipe` INT NOT NULL,
  PRIMARY KEY (`idContato`),
  INDEX `fk_Contato_Recurso1_idx` (`Recurso_idRecurso` ASC, `Recurso_Equipe_idEquipe` ASC) VISIBLE,
  CONSTRAINT `fk_Contato_Recurso1`
    FOREIGN KEY (`Recurso_idRecurso`)
    REFERENCES `mydb`.`Recurso` (`idRecurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Projeto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Projeto` (
  `idProjeto` INT NOT NULL AUTO_INCREMENT,
  `nomeProjeto` VARCHAR(45) NOT NULL,
  `statusProj` ENUM('Em andamento', 'Aguardando Prioridade', 'Finalizadi') NOT NULL,
  `dataInicioProj` DATE NOT NULL,
  `previsaoDataFinalProj` DATE NOT NULL,
  `dataFinalProj` DATE NULL,
  `previsaoNumHoras` DECIMAL NOT NULL,
  `numHorasProj` DECIMAL NULL,
  `Recurso_idGerente` INT NOT NULL,
  `Equipe_idEquipe` INT NOT NULL,
  PRIMARY KEY (`idProjeto`),
  INDEX `fk_Projeto_Recurso1_idx` (`Recurso_idGerente` ASC) VISIBLE,
  INDEX `fk_Projeto_Equipe1_idx` (`Equipe_idEquipe` ASC) VISIBLE,
  CONSTRAINT `fk_Projeto_Recurso1`
    FOREIGN KEY (`Recurso_idGerente`)
    REFERENCES `mydb`.`Recurso` (`idRecurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Projeto_Equipe1`
    FOREIGN KEY (`Equipe_idEquipe`)
    REFERENCES `mydb`.`Equipe` (`idEquipe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Ferramentas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Ferramentas` (
  `idFerramenta` INT NOT NULL AUTO_INCREMENT,
  `nomeFerramenta` VARCHAR(45) NOT NULL,
  `versaoFerramenta` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idFerramenta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Recursos_Ferramentas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Recursos_Ferramentas` (
  `idRecursoFerramenta` INT NOT NULL AUTO_INCREMENT,
  `Recurso_idRecurso` INT NOT NULL,
  `Ferramenta_idFerramenta` INT NOT NULL,
  PRIMARY KEY (`idRecursoFerramenta`),
  INDEX `fk_RecursoFerramentaProg_Recurso1_idx` (`Recurso_idRecurso` ASC) VISIBLE,
  INDEX `fk_RecursoFerramentaProg_FerramentaProg1_idx` (`Ferramenta_idFerramenta` ASC) VISIBLE,
  CONSTRAINT `fk_RecursoFerramentaProg_Recurso1`
    FOREIGN KEY (`Recurso_idRecurso`)
    REFERENCES `mydb`.`Recurso` (`idRecurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RecursoFerramentaProg_FerramentaProg1`
    FOREIGN KEY (`Ferramenta_idFerramenta`)
    REFERENCES `mydb`.`Ferramentas` (`idFerramenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Atividade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Atividade` (
  `idAtividade` INT NOT NULL AUTO_INCREMENT,
  `nomeAtividade` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idAtividade`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tarefa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tarefa` (
  `idTarefa` INT NOT NULL AUTO_INCREMENT,
  `descTarefa` VARCHAR(120) NOT NULL,
  `Atividade_idAtividade` INT NOT NULL,
  PRIMARY KEY (`idTarefa`),
  INDEX `fk_Tarefa_Atividade1_idx` (`Atividade_idAtividade` ASC) VISIBLE,
  CONSTRAINT `fk_Tarefa_Atividade1`
    FOREIGN KEY (`Atividade_idAtividade`)
    REFERENCES `mydb`.`Atividade` (`idAtividade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ProjetoAtividade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ProjetoAtividade` (
  `idProjetoAtividade` INT NOT NULL AUTO_INCREMENT,
  `Atividade_idAtividade` INT NOT NULL,
  `Projeto_idProjeto` INT NOT NULL,
  PRIMARY KEY (`idProjetoAtividade`),
  INDEX `fk_ProjetoAtividade_Atividade1_idx` (`Atividade_idAtividade` ASC) VISIBLE,
  INDEX `fk_ProjetoAtividade_Projeto1_idx` (`Projeto_idProjeto` ASC) VISIBLE,
  CONSTRAINT `fk_ProjetoAtividade_Atividade1`
    FOREIGN KEY (`Atividade_idAtividade`)
    REFERENCES `mydb`.`Atividade` (`idAtividade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProjetoAtividade_Projeto1`
    FOREIGN KEY (`Projeto_idProjeto`)
    REFERENCES `mydb`.`Projeto` (`idProjeto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`HistoricoSalario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`HistoricoSalario` (
  `idHistoricoSalario` INT NOT NULL AUTO_INCREMENT,
  `salario` FLOAT NOT NULL,
  `dataAumento` DATE NOT NULL,
  `Recurso_idRecurso` INT NOT NULL,
  PRIMARY KEY (`idHistoricoSalario`),
  INDEX `fk_HistoricoSalario_Recurso1_idx` (`Recurso_idRecurso` ASC) VISIBLE,
  CONSTRAINT `fk_HistoricoSalario_Recurso1`
    FOREIGN KEY (`Recurso_idRecurso`)
    REFERENCES `mydb`.`Recurso` (`idRecurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


------------------------------------------------
-- DDL Alterar tabela
------------------------------------------------

--Adicionar coluna
ALTER TABLE cargos ADD COLUMN descricao VARCHAR(255) NULL AFTER nomeCargo;
--Remover coluna
ALTER TABLE cargos DROP COLUMN descricao;
--Mudar nome de coluna
ALTER TABLE cargos CHANGE COLUMN nomeCargo tituloCargo VARCHAR(100) NOT NULL;
--Modificar tipo de coluna
ALTER TABLE cargos MODIFY COLUMN nomeCargo VARCHAR(150) NOT NULL;
--Mudar nome da tabela
ALTER TABLE cargos RENAME TO cargo;
--Adicionar FOREIGN KEY
ALTER TABLE cargos ADD CONSTRAINT 'fk_cargos_recursos' 
FOREIGN KEY (recursos_idRecurso) REFERENCES Recursos(idRecurso) ON DELETE CASCADE;
--Adicionar PRIMARY KEY
ALTER TABLE cargos ADD PRIMARY KEY (descricao);


ALTER TABLE Recurso RENAME Recursos;
ALTER TABLE Cargo RENAME Cargos;



--Exercício

--1. Adicionar uma nova coluna descricao a tabela Cargos, que será do tipo VARCHAR(255) e poderá conter dados nulos. Coloque essa coluna logo após nomeCargo.
ALTER TABLE cargos ADD COLUMN descricao VARCHAR(255) NULL AFTER nomeCargo;

--2. Modificar a coluna nomeCargo para que ela possa armazenar 155 caracteres e não aceite valores NULL.
ALTER TABLE Cargos MODIFY COLUMN nomeCargo VARCHAR(155) NOT NULL;

--3. Renomear a coluna nomeCargo para tituloCargo mantendo as mesmas características.
ALTER TABLE Cargos CHANGE COLUMN nomeCargo tituloCargo VARCHAR(150) NOT NULL;

--4. Remover a coluna descricao.
ALTER TABLE Cargos DROP COLUMN descricao;

--5. Adicionar uma Foreign Key na tabela Recursos, conectando a coluna Cargos_idCargos e e coluna idCargos da tabela Cargos.
ALTER TABLE Recursos ADD CONSTRAINT fk_cargos_recursos 
FOREIGN KEY (Cargo_idCargo) REFERENCES Cargos(idCargo) ON DELETE CASCADE;

--6. Adicionar um índice na coluna tituloCargo para otimizar as consultas.
ALTER TABLE Cargos ADD INDEX `fk_Cargos_tituloCargo_idx` (`tituloCargo`);

--7. Renomear a tabela Cargos para Funcoes.
ALTER TABLE Cargos RENAME Funcoes;

--8. Adicionar uma nova PRIMARY KEY à tabela Enderecos considerando que a coluna idEndereco será a chave primária.
ALTER TABLE Enderecos ADD PRIMARY KEY (idEndereco);


--Remover coluna idCargo de Recursos
--1 remover FK
ALTER TALBE Recursos DROP FOREIGN KEY idCargo;
--2 remover columa
ALTER TABLE Recursos DROP COLUMN idCargo;

--Voltando ao normal
ALTER TABLE Funcoes RENAME Cargos;
ALTER TABLE Cargos CHANGE COLUMN tituloCargo nomeCargo VARCHAR(150) NOT NULL;
ALTER TABLE cargos ADD COLUMN descricao VARCHAR(255) NULL AFTER nomeCargo;

--------------------
--DML
--------------------

--Adicionar dados
INSERT INTO Cargos(nomeCargo, descricao)
VALUES ('Desenvolvedor','Soluciona os nosso problemas'),
	('Gerente','Gerencia as equipes'),
 	('Suporte','Resolve problemas com os clientes');

--Remover dado (linha toda) *****SEMPRE USAR WHERE****
DELETE FROM Cargos WHERE idCargo=3;

--Adicionar coluna e atualizar registros (e apagar depois)
ALTER TABLE Cargos ADD COLUMN Salario DECIMAL(10,2) NOT NULL;
UPDATE Cargos SET Salario=10000 WHERE idCargo=1;
UPDATE Cargos SET Salario=15000 WHERE nomeCargo='Gerente';
ALTER TABLE Cargos DROP COLUMN Salario;

--Exercício: adicionar vários inserts

INSERT INTO Endereco (endLogradouro, endNumero, endComplemento, endCidade,endEstado,endPais,endCEP)
VALUE('Rua Brasil','345','Apto 401','Porto Alegre','RS','Brasil','90010-000');

INSERT INTO Equipe (nomeEquipe,numerRecursos)
VALUE('Dev1',10);

INSERT INTO Recursos (nomeRecurso,salarioRecurso,Cargo_idCargo,Endereco_idEndereco,Equipe_idEquipe1)
VALUE('Ayumi','10000',1,1,1);

SELECT * FROM Recursos;
SELECT * FROM Endereco;
SELECT * FROM Cargos;
SELECT * FROM Equipe;